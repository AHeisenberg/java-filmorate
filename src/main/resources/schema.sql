DROP TABLE IF EXISTS ratings_mpa CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS films_genres CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends_status CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS directors CASCADE;
DROP TABLE IF EXISTS film_directors CASCADE;
DROP TABLE IF EXISTS users_likes_reviews CASCADE;

CREATE TABLE ratings_mpa (
                         rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         name VARCHAR(15) NOT NULL UNIQUE
);

CREATE TABLE films (
                       film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       name VARCHAR(200) NOT NULL,
                       description VARCHAR(200) NOT NULL,
                       duration INTEGER NOT NULL,
                       release_date DATE,
                       rating_id INTEGER REFERENCES ratings_mpa (rating_id) ON DELETE RESTRICT,
                       likes_count BIGINT,
                       CHECK (name <> '' AND duration > 0)
);

CREATE TABLE genres (
                        genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE films_genres (
                              film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
                              genre_id INTEGER REFERENCES genres (genre_id) ON DELETE CASCADE,
                              PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE users (
                       user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       email VARCHAR(255) NOT NULL UNIQUE,
                       login VARCHAR(50) NOT NULL UNIQUE,
                       name VARCHAR(50),
                       birthday DATE,
                       CHECK (email <> '' AND login <> '')
);

CREATE TABLE friends_status (
                            to_user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
                            from_user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
                            accepted BOOLEAN,
                            PRIMARY KEY (to_user_id, from_user_id)
);

CREATE TABLE likes (
                             film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
                             user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
                             PRIMARY KEY (film_id, user_id)
);

CREATE TABLE reviews (
                         review_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         content     TEXT,
                         is_positive BOOLEAN,
                         to_user_id  BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
                         to_film_id  BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
                         useful      BIGINT DEFAULT 0
);

CREATE TABLE users_likes_reviews (
                                     review_id BIGINT REFERENCES reviews (review_id) ON DELETE CASCADE,
                                     user_id   BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
                                     is_like   BOOLEAN
);

CREATE TABLE directors (
                           director_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           director_name VARCHAR(50)
);

CREATE TABLE film_directors (
                                film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
                                director_id BIGINT REFERENCES directors (director_id) ON DELETE CASCADE,
                                PRIMARY KEY (film_id, director_id)
);

